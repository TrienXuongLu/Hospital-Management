@page "/EquipmentPage"
@page "/AddEquipPage/{EquipId:int}"

@using HospitalManagementSystem.Data
@inject EquipmentInstance equipInstance
@inject NavigationManager navManager

<h3>Equipment</h3>
<div class="search_section">
    <div class="label">
        <label class="label_search" for="toolName">Name</label><br />
        <label class="label_search" for="Qty">Qty</label>
    </div>
    <div class="input">
        <input type="text" id="toolName" @bind="toolName" placeholder="Type Tool Name" /><br />
        <input type="text" id="Qty" @bind="Qty" placeholder="Type Tool Qty" />
    </div>
    <button class="btn" @onclick="Validation">Add</button>
    <button class="btn" @onclick="BackToMain">Remove</button><br />
</div>


@code {
    [Parameter]
    public int EquipId { get; set; }

    private int equipId = 0;
    private string toolName = "";
    private int Qty = 0;

    protected async override void OnInitialized()
    {
        base.OnInitialized();

        equipId = EquipId;
        if (equipId > 0)
        {
            var equip = await equipInstance.SearchEquip(equipId);
            toolName = equip.toolName;
            Qty = equip.qty;
            this.StateHasChanged();
        }
    }

    public async void Validation()
    {
        var equip = new Equipment();
        equip.toolName = toolName;

        try
        {
            if (toolName == null || toolName == "")
            {
                throw new ArgumentNullException();
            }
            AddEquip();
        }
        catch (ArgumentNullException ex)
        {
            await Application.Current.MainPage.DisplayAlert("Please Fill In All Values", ex.Message, "Exit");
        }
    }

    public async void AddEquip()
    {
        var equip = new Equipment();
        equip.equipId = equipId;
        equip.toolName = toolName;
        equip.qty = Qty;


        var equipAdd = await equipInstance.AddEditEquip(equip);
        if (equipAdd)
        {
            if (equipId == 0)
            {
                await App.Current.MainPage.DisplayAlert("Save Equipment", "Saved", "Equipment Saved");
            }
            else
            {
                await App.Current.MainPage.DisplayAlert("Update Doctor", "Updated", "Doctor Update");
            }
            navManager.NavigateTo("EquipmentMainPage");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Saving", "Saving File", "Saved");
        }
    }

    public void BackToMain()
    {
        navManager.NavigateTo("EquipmentMainPage");
    }
}
